[gd_resource type="ShaderMaterial" load_steps=2 format=3 uid="uid://btixxybihit3m"]

[sub_resource type="Shader" id="Shader_uchyk"]
code = "shader_type canvas_item;

// Scrolling and transformation controls
uniform vec2 motion = vec2(100.0, 0.0);
uniform float scale = 1.0;
uniform vec2 translation = vec2(0.0);
uniform float rotation = 0.0;
uniform vec2 rotation_center = vec2(0.0);
uniform vec4 hint_color : source_color = vec4(0.122, 0.145, 0.176, 0.671);

void fragment() {
    // Calculate base position with transformations
    vec2 pixel_pos = FRAGCOORD.xy;
    vec2 pos = (pixel_pos + translation + TIME * -motion) * TEXTURE_PIXEL_SIZE * (1.0 / scale);

    // Apply rotation
    vec2 center = vec2(0.5) + rotation_center;
    float cos_r = cos(rotation);
    float sin_r = sin(rotation);
    mat2 rot = mat2(vec2(cos_r, -sin_r), vec2(sin_r, cos_r));

    pos -= center;
    pos = rot * pos;
    pos += center;

    vec2 uv = pos;

    COLOR = texture(TEXTURE, uv) * hint_color;
}"

[resource]
shader = SubResource("Shader_uchyk")
shader_parameter/motion = Vector2(100, 0)
shader_parameter/scale = 1.0
shader_parameter/translation = Vector2(0, 0)
shader_parameter/rotation = 0.0
shader_parameter/rotation_center = Vector2(0, 0)
shader_parameter/hint_color = Color(0.122, 0.145, 0.176, 0.671)
